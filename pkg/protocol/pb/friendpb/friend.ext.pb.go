// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: pkg/protocol/proto/friend/friend.ext.proto

package friendpb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 发送好友消息请求
type SendFriendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecipientId   uint64                 `protobuf:"varint,1,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"` // 接收方用户ID
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                             // 消息内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFriendMessageRequest) Reset() {
	*x = SendFriendMessageRequest{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendMessageRequest) ProtoMessage() {}

func (x *SendFriendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendFriendMessageRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{0}
}

func (x *SendFriendMessageRequest) GetRecipientId() uint64 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *SendFriendMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 发送好友消息响应
type SendFriendMessageReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息ID 序列号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFriendMessageReply) Reset() {
	*x = SendFriendMessageReply{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendMessageReply) ProtoMessage() {}

func (x *SendFriendMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendMessageReply.ProtoReflect.Descriptor instead.
func (*SendFriendMessageReply) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{1}
}

func (x *SendFriendMessageReply) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

// 发送好友申请请求
type SendFriendRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecipientId   uint64                 `protobuf:"varint,1,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"` // 接收方用户ID
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                             // 申请消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFriendRequestRequest) Reset() {
	*x = SendFriendRequestRequest{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequestRequest) ProtoMessage() {}

func (x *SendFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*SendFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{2}
}

func (x *SendFriendRequestRequest) GetRecipientId() uint64 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *SendFriendRequestRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 发送好友申请响应
type SendFriendRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     uint64                 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 申请ID
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                       // 结果消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFriendRequestResponse) Reset() {
	*x = SendFriendRequestResponse{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequestResponse) ProtoMessage() {}

func (x *SendFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*SendFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{3}
}

func (x *SendFriendRequestResponse) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *SendFriendRequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取收到的好友申请列表请求
type GetReceivedFriendRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint32                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 分页页码，默认从 1 开始
	PageSize      uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页返回的申请数量，默认值为 10
	Status        uint32                 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                     // 申请状态过滤 (0=待处理, 1=已同意, 2=已拒绝, 3=已忽略)，不传则返回所有状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReceivedFriendRequestsRequest) Reset() {
	*x = GetReceivedFriendRequestsRequest{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReceivedFriendRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceivedFriendRequestsRequest) ProtoMessage() {}

func (x *GetReceivedFriendRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceivedFriendRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetReceivedFriendRequestsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{4}
}

func (x *GetReceivedFriendRequestsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetReceivedFriendRequestsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetReceivedFriendRequestsRequest) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 获取收到的好友申请列表响应
type GetReceivedFriendRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*FriendRequestInfo   `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"` // 申请列表
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`      // 总数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReceivedFriendRequestsResponse) Reset() {
	*x = GetReceivedFriendRequestsResponse{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReceivedFriendRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceivedFriendRequestsResponse) ProtoMessage() {}

func (x *GetReceivedFriendRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceivedFriendRequestsResponse.ProtoReflect.Descriptor instead.
func (*GetReceivedFriendRequestsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{5}
}

func (x *GetReceivedFriendRequestsResponse) GetRequests() []*FriendRequestInfo {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *GetReceivedFriendRequestsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 获取发送的好友申请列表请求
type GetSentFriendRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint32                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 分页页码，默认从 1 开始
	PageSize      uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页返回的申请数量，默认值为 10
	Status        uint32                 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                     // 申请状态过滤 (0=待处理, 1=已同意, 2=已拒绝, 3=已忽略)，不传则返回所有状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSentFriendRequestsRequest) Reset() {
	*x = GetSentFriendRequestsRequest{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSentFriendRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSentFriendRequestsRequest) ProtoMessage() {}

func (x *GetSentFriendRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSentFriendRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetSentFriendRequestsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{6}
}

func (x *GetSentFriendRequestsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSentFriendRequestsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetSentFriendRequestsRequest) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 获取发送的好友申请列表响应
type GetSentFriendRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*FriendRequestInfo   `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"` // 申请列表
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`      // 总数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSentFriendRequestsResponse) Reset() {
	*x = GetSentFriendRequestsResponse{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSentFriendRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSentFriendRequestsResponse) ProtoMessage() {}

func (x *GetSentFriendRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSentFriendRequestsResponse.ProtoReflect.Descriptor instead.
func (*GetSentFriendRequestsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{7}
}

func (x *GetSentFriendRequestsResponse) GetRequests() []*FriendRequestInfo {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *GetSentFriendRequestsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 处理好友申请请求
type HandleFriendRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     uint64                 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 申请ID
	Action        uint32                 `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty"`                        // 处理动作 (1=同意, 2=拒绝, 3=忽略)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleFriendRequestRequest) Reset() {
	*x = HandleFriendRequestRequest{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleFriendRequestRequest) ProtoMessage() {}

func (x *HandleFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*HandleFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{8}
}

func (x *HandleFriendRequestRequest) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *HandleFriendRequestRequest) GetAction() uint32 {
	if x != nil {
		return x.Action
	}
	return 0
}

// 处理好友申请响应
type HandleFriendRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // 结果消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleFriendRequestResponse) Reset() {
	*x = HandleFriendRequestResponse{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleFriendRequestResponse) ProtoMessage() {}

func (x *HandleFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*HandleFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{9}
}

func (x *HandleFriendRequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取好友列表请求
type GetFriendListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint32                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                               // 分页页码，默认从 1 开始
	PageSize      uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // 每页返回的好友数量，默认值为 10
	CategoryId    uint64                 `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"` // 分类ID过滤，不传则返回所有分类
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendListRequest) Reset() {
	*x = GetFriendListRequest{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListRequest) ProtoMessage() {}

func (x *GetFriendListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListRequest.ProtoReflect.Descriptor instead.
func (*GetFriendListRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{10}
}

func (x *GetFriendListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetFriendListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetFriendListRequest) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

// 获取好友列表响应
type GetFriendListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Friends       []*FriendInfo          `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"` // 好友列表
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`    // 总数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendListResponse) Reset() {
	*x = GetFriendListResponse{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListResponse) ProtoMessage() {}

func (x *GetFriendListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListResponse.ProtoReflect.Descriptor instead.
func (*GetFriendListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{11}
}

func (x *GetFriendListResponse) GetFriends() []*FriendInfo {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *GetFriendListResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 好友申请信息
type FriendRequestInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           // 申请ID
	RequesterId   uint64                 `protobuf:"varint,2,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`      // 申请人ID
	RecipientId   uint64                 `protobuf:"varint,3,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`      // 接收人ID
	Status        uint32                 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                   // 申请状态 (0=待处理, 1=已同意, 2=已拒绝, 3=已忽略)
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`                                  // 申请消息
	CreatedAt     int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`            // 创建时间
	UpdatedAt     int64                  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`            // 更新时间
	RequesterInfo *UserInfo              `protobuf:"bytes,8,opt,name=requester_info,json=requesterInfo,proto3" json:"requester_info,omitempty"` // 申请人信息（可选）
	RecipientInfo *UserInfo              `protobuf:"bytes,9,opt,name=recipient_info,json=recipientInfo,proto3" json:"recipient_info,omitempty"` // 接收人信息（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendRequestInfo) Reset() {
	*x = FriendRequestInfo{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendRequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequestInfo) ProtoMessage() {}

func (x *FriendRequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequestInfo.ProtoReflect.Descriptor instead.
func (*FriendRequestInfo) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{12}
}

func (x *FriendRequestInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FriendRequestInfo) GetRequesterId() uint64 {
	if x != nil {
		return x.RequesterId
	}
	return 0
}

func (x *FriendRequestInfo) GetRecipientId() uint64 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *FriendRequestInfo) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FriendRequestInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FriendRequestInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FriendRequestInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *FriendRequestInfo) GetRequesterInfo() *UserInfo {
	if x != nil {
		return x.RequesterInfo
	}
	return nil
}

func (x *FriendRequestInfo) GetRecipientInfo() *UserInfo {
	if x != nil {
		return x.RecipientInfo
	}
	return nil
}

// 好友信息
type FriendInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 用户ID
	FriendId      uint64                 `protobuf:"varint,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`       // 好友ID
	Remark        string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`                            // 备注名
	CategoryId    uint64                 `protobuf:"varint,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"` // 分类ID
	IsBlocked     bool                   `protobuf:"varint,5,opt,name=is_blocked,json=isBlocked,proto3" json:"is_blocked,omitempty"`    // 是否被屏蔽
	CreatedAt     int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`    // 添加时间
	UpdatedAt     int64                  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`    // 更新时间
	FriendInfo    *UserInfo              `protobuf:"bytes,8,opt,name=friend_info,json=friendInfo,proto3" json:"friend_info,omitempty"`  // 好友用户信息（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{13}
}

func (x *FriendInfo) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FriendInfo) GetFriendId() uint64 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

func (x *FriendInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FriendInfo) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *FriendInfo) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *FriendInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FriendInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *FriendInfo) GetFriendInfo() *UserInfo {
	if x != nil {
		return x.FriendInfo
	}
	return nil
}

// 用户基本信息
type UserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`         // 用户 ID
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`                    // 用户名
	AvatarUrl     string                 `protobuf:"bytes,3,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"` // 用户头像 URL
	Nickname      string                 `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`                    // 昵称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP(), []int{14}
}

func (x *UserInfo) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfo) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

var File_pkg_protocol_proto_friend_friend_ext_proto protoreflect.FileDescriptor

const file_pkg_protocol_proto_friend_friend_ext_proto_rawDesc = "" +
	"\n" +
	"*pkg/protocol/proto/friend/friend.ext.proto\x12\x06friend\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x17validate/validate.proto\"r\n" +
	"\x18SendFriendMessageRequest\x12-\n" +
	"\frecipient_id\x18\x01 \x01(\x04B\n" +
	"\xe0A\x02\xfaB\x042\x02(\x01R\vrecipientId\x12'\n" +
	"\amessage\x18\x02 \x01(\tB\r\xe0A\x02\xfaB\ar\x05\x10\x01\x18\xe8\aR\amessage\"7\n" +
	"\x16SendFriendMessageReply\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\"m\n" +
	"\x18SendFriendRequestRequest\x12-\n" +
	"\frecipient_id\x18\x01 \x01(\x04B\n" +
	"\xe0A\x02\xfaB\x042\x02(\x01R\vrecipientId\x12\"\n" +
	"\amessage\x18\x02 \x01(\tB\b\xfaB\x05r\x03\x18\xff\x01R\amessage\"T\n" +
	"\x19SendFriendRequestResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\x04R\trequestId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x7f\n" +
	" GetReceivedFriendRequestsRequest\x12\x1b\n" +
	"\x04page\x18\x01 \x01(\rB\a\xfaB\x04*\x02(\x01R\x04page\x12&\n" +
	"\tpage_size\x18\x02 \x01(\rB\t\xfaB\x06*\x04\x18d(\x01R\bpageSize\x12\x16\n" +
	"\x06status\x18\x03 \x01(\rR\x06status\"p\n" +
	"!GetReceivedFriendRequestsResponse\x125\n" +
	"\brequests\x18\x01 \x03(\v2\x19.friend.FriendRequestInfoR\brequests\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"{\n" +
	"\x1cGetSentFriendRequestsRequest\x12\x1b\n" +
	"\x04page\x18\x01 \x01(\rB\a\xfaB\x04*\x02(\x01R\x04page\x12&\n" +
	"\tpage_size\x18\x02 \x01(\rB\t\xfaB\x06*\x04\x18d(\x01R\bpageSize\x12\x16\n" +
	"\x06status\x18\x03 \x01(\rR\x06status\"l\n" +
	"\x1dGetSentFriendRequestsResponse\x125\n" +
	"\brequests\x18\x01 \x03(\v2\x19.friend.FriendRequestInfoR\brequests\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"o\n" +
	"\x1aHandleFriendRequestRequest\x12)\n" +
	"\n" +
	"request_id\x18\x01 \x01(\x04B\n" +
	"\xe0A\x02\xfaB\x042\x02(\x01R\trequestId\x12&\n" +
	"\x06action\x18\x02 \x01(\rB\x0e\xe0A\x02\xfaB\b*\x060\x010\x020\x03R\x06action\"7\n" +
	"\x1bHandleFriendRequestResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"|\n" +
	"\x14GetFriendListRequest\x12\x1b\n" +
	"\x04page\x18\x01 \x01(\rB\a\xfaB\x04*\x02(\x01R\x04page\x12&\n" +
	"\tpage_size\x18\x02 \x01(\rB\t\xfaB\x06*\x04\x18d(\x01R\bpageSize\x12\x1f\n" +
	"\vcategory_id\x18\x03 \x01(\x04R\n" +
	"categoryId\"[\n" +
	"\x15GetFriendListResponse\x12,\n" +
	"\afriends\x18\x01 \x03(\v2\x12.friend.FriendInfoR\afriends\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"\xda\x02\n" +
	"\x11FriendRequestInfo\x12\x13\n" +
	"\x02id\x18\x01 \x01(\x04B\x03\xe0A\x02R\x02id\x12&\n" +
	"\frequester_id\x18\x02 \x01(\x04B\x03\xe0A\x02R\vrequesterId\x12&\n" +
	"\frecipient_id\x18\x03 \x01(\x04B\x03\xe0A\x02R\vrecipientId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\rR\x06status\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\x03R\tupdatedAt\x127\n" +
	"\x0erequester_info\x18\b \x01(\v2\x10.friend.UserInfoR\rrequesterInfo\x127\n" +
	"\x0erecipient_info\x18\t \x01(\v2\x10.friend.UserInfoR\rrecipientInfo\"\x95\x02\n" +
	"\n" +
	"FriendInfo\x12\x1c\n" +
	"\auser_id\x18\x01 \x01(\x04B\x03\xe0A\x02R\x06userId\x12 \n" +
	"\tfriend_id\x18\x02 \x01(\x04B\x03\xe0A\x02R\bfriendId\x12\x16\n" +
	"\x06remark\x18\x03 \x01(\tR\x06remark\x12\x1f\n" +
	"\vcategory_id\x18\x04 \x01(\x04R\n" +
	"categoryId\x12\x1d\n" +
	"\n" +
	"is_blocked\x18\x05 \x01(\bR\tisBlocked\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\x03R\tupdatedAt\x121\n" +
	"\vfriend_info\x18\b \x01(\v2\x10.friend.UserInfoR\n" +
	"friendInfo\"\x84\x01\n" +
	"\bUserInfo\x12\x1c\n" +
	"\auser_id\x18\x01 \x01(\x04B\x03\xe0A\x02R\x06userId\x12\x1f\n" +
	"\busername\x18\x02 \x01(\tB\x03\xe0A\x02R\busername\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x03 \x01(\tR\tavatarUrl\x12\x1a\n" +
	"\bnickname\x18\x04 \x01(\tR\bnickname2\xa9\x06\n" +
	"\x10FriendExtService\x12r\n" +
	"\vSendMessage\x12 .friend.SendFriendMessageRequest\x1a\x1e.friend.SendFriendMessageReply\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/api/v1/friend/message\x12{\n" +
	"\x11SendFriendRequest\x12 .friend.SendFriendRequestRequest\x1a!.friend.SendFriendRequestResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/api/v1/friend/request\x12\x9a\x01\n" +
	"\x19GetReceivedFriendRequests\x12(.friend.GetReceivedFriendRequestsRequest\x1a).friend.GetReceivedFriendRequestsResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /api/v1/friend/requests/received\x12\x8a\x01\n" +
	"\x15GetSentFriendRequests\x12$.friend.GetSentFriendRequestsRequest\x1a%.friend.GetSentFriendRequestsResponse\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/api/v1/friend/requests/sent\x12\x8e\x01\n" +
	"\x13HandleFriendRequest\x12\".friend.HandleFriendRequestRequest\x1a#.friend.HandleFriendRequestResponse\".\x82\xd3\xe4\x93\x02(:\x01*\x1a#/api/v1/friend/request/{request_id}\x12i\n" +
	"\rGetFriendList\x12\x1c.friend.GetFriendListRequest\x1a\x1d.friend.GetFriendListResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/api/v1/friend/listB\x1aZ\x18pkg/protocol/pb/friendpbb\x06proto3"

var (
	file_pkg_protocol_proto_friend_friend_ext_proto_rawDescOnce sync.Once
	file_pkg_protocol_proto_friend_friend_ext_proto_rawDescData []byte
)

func file_pkg_protocol_proto_friend_friend_ext_proto_rawDescGZIP() []byte {
	file_pkg_protocol_proto_friend_friend_ext_proto_rawDescOnce.Do(func() {
		file_pkg_protocol_proto_friend_friend_ext_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_protocol_proto_friend_friend_ext_proto_rawDesc), len(file_pkg_protocol_proto_friend_friend_ext_proto_rawDesc)))
	})
	return file_pkg_protocol_proto_friend_friend_ext_proto_rawDescData
}

var file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_pkg_protocol_proto_friend_friend_ext_proto_goTypes = []any{
	(*SendFriendMessageRequest)(nil),          // 0: friend.SendFriendMessageRequest
	(*SendFriendMessageReply)(nil),            // 1: friend.SendFriendMessageReply
	(*SendFriendRequestRequest)(nil),          // 2: friend.SendFriendRequestRequest
	(*SendFriendRequestResponse)(nil),         // 3: friend.SendFriendRequestResponse
	(*GetReceivedFriendRequestsRequest)(nil),  // 4: friend.GetReceivedFriendRequestsRequest
	(*GetReceivedFriendRequestsResponse)(nil), // 5: friend.GetReceivedFriendRequestsResponse
	(*GetSentFriendRequestsRequest)(nil),      // 6: friend.GetSentFriendRequestsRequest
	(*GetSentFriendRequestsResponse)(nil),     // 7: friend.GetSentFriendRequestsResponse
	(*HandleFriendRequestRequest)(nil),        // 8: friend.HandleFriendRequestRequest
	(*HandleFriendRequestResponse)(nil),       // 9: friend.HandleFriendRequestResponse
	(*GetFriendListRequest)(nil),              // 10: friend.GetFriendListRequest
	(*GetFriendListResponse)(nil),             // 11: friend.GetFriendListResponse
	(*FriendRequestInfo)(nil),                 // 12: friend.FriendRequestInfo
	(*FriendInfo)(nil),                        // 13: friend.FriendInfo
	(*UserInfo)(nil),                          // 14: friend.UserInfo
}
var file_pkg_protocol_proto_friend_friend_ext_proto_depIdxs = []int32{
	12, // 0: friend.GetReceivedFriendRequestsResponse.requests:type_name -> friend.FriendRequestInfo
	12, // 1: friend.GetSentFriendRequestsResponse.requests:type_name -> friend.FriendRequestInfo
	13, // 2: friend.GetFriendListResponse.friends:type_name -> friend.FriendInfo
	14, // 3: friend.FriendRequestInfo.requester_info:type_name -> friend.UserInfo
	14, // 4: friend.FriendRequestInfo.recipient_info:type_name -> friend.UserInfo
	14, // 5: friend.FriendInfo.friend_info:type_name -> friend.UserInfo
	0,  // 6: friend.FriendExtService.SendMessage:input_type -> friend.SendFriendMessageRequest
	2,  // 7: friend.FriendExtService.SendFriendRequest:input_type -> friend.SendFriendRequestRequest
	4,  // 8: friend.FriendExtService.GetReceivedFriendRequests:input_type -> friend.GetReceivedFriendRequestsRequest
	6,  // 9: friend.FriendExtService.GetSentFriendRequests:input_type -> friend.GetSentFriendRequestsRequest
	8,  // 10: friend.FriendExtService.HandleFriendRequest:input_type -> friend.HandleFriendRequestRequest
	10, // 11: friend.FriendExtService.GetFriendList:input_type -> friend.GetFriendListRequest
	1,  // 12: friend.FriendExtService.SendMessage:output_type -> friend.SendFriendMessageReply
	3,  // 13: friend.FriendExtService.SendFriendRequest:output_type -> friend.SendFriendRequestResponse
	5,  // 14: friend.FriendExtService.GetReceivedFriendRequests:output_type -> friend.GetReceivedFriendRequestsResponse
	7,  // 15: friend.FriendExtService.GetSentFriendRequests:output_type -> friend.GetSentFriendRequestsResponse
	9,  // 16: friend.FriendExtService.HandleFriendRequest:output_type -> friend.HandleFriendRequestResponse
	11, // 17: friend.FriendExtService.GetFriendList:output_type -> friend.GetFriendListResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_protocol_proto_friend_friend_ext_proto_init() }
func file_pkg_protocol_proto_friend_friend_ext_proto_init() {
	if File_pkg_protocol_proto_friend_friend_ext_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_protocol_proto_friend_friend_ext_proto_rawDesc), len(file_pkg_protocol_proto_friend_friend_ext_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_protocol_proto_friend_friend_ext_proto_goTypes,
		DependencyIndexes: file_pkg_protocol_proto_friend_friend_ext_proto_depIdxs,
		MessageInfos:      file_pkg_protocol_proto_friend_friend_ext_proto_msgTypes,
	}.Build()
	File_pkg_protocol_proto_friend_friend_ext_proto = out.File
	file_pkg_protocol_proto_friend_friend_ext_proto_goTypes = nil
	file_pkg_protocol_proto_friend_friend_ext_proto_depIdxs = nil
}
