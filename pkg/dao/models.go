// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package dao

import (
	"database/sql"
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"
)

type OutboxEventsStatus string

const (
	OutboxEventsStatusPending OutboxEventsStatus = "pending"
	OutboxEventsStatusSent    OutboxEventsStatus = "sent"
	OutboxEventsStatusFailed  OutboxEventsStatus = "failed"
)

func (e *OutboxEventsStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = OutboxEventsStatus(s)
	case string:
		*e = OutboxEventsStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for OutboxEventsStatus: %T", src)
	}
	return nil
}

type NullOutboxEventsStatus struct {
	OutboxEventsStatus OutboxEventsStatus `json:"outbox_events_status"`
	Valid              bool               `json:"valid"` // Valid is true if OutboxEventsStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullOutboxEventsStatus) Scan(value interface{}) error {
	if value == nil {
		ns.OutboxEventsStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.OutboxEventsStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullOutboxEventsStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.OutboxEventsStatus), nil
}

// 会话表（热数据）
type Conversation struct {
	// 会话ID
	ConversationID string `json:"conversation_id"`
	// 1:单聊 2:群聊
	Type int8 `json:"type"`
	// 参与者ID数组
	Participants json.RawMessage `json:"participants"`
	// 最后一条消息ID
	LastMessageID sql.NullString `json:"last_message_id"`
	// 最新序列号
	LastSeq sql.NullInt64 `json:"last_seq"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
}

// 设备
type Device struct {
	// 自增主键
	ID uint64 `json:"id"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
	// 账户id
	UserID uint64 `json:"user_id"`
	// 设备类型,1:Android；2：IOS；3：Windows; 4：MacOS；5：Web
	Type int8 `json:"type"`
	// 手机厂商
	Brand string `json:"brand"`
	// 机型
	Model string `json:"model"`
	// 系统版本
	SystemVersion string `json:"system_version"`
	// app版本
	SdkVersion string `json:"sdk_version"`
	// 在线状态，0：离线；1：在线
	Status int8 `json:"status"`
	// 连接层服务器地址
	ConnAddr string `json:"conn_addr"`
	// 客户端地址
	ClientAddr string `json:"client_addr"`
}

// 好友关系表
type Friend struct {
	// 自增主键
	ID uint64 `json:"id"`
	// 用户ID
	UserID uint64 `json:"user_id"`
	// 好友用户ID
	FriendID uint64 `json:"friend_id"`
	// 好友备注
	Remark string `json:"remark"`
	// 好友分类ID，0为默认分组
	CategoryID uint64 `json:"category_id"`
	// 是否屏蔽：0-否，1-是
	IsBlocked int8 `json:"is_blocked"`
	// 添加时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
}

// 好友申请表
type FriendRequest struct {
	// 自增主键
	ID uint64 `json:"id"`
	// 申请人用户ID
	RequesterID uint64 `json:"requester_id"`
	// 接收人用户ID
	RecipientID uint64 `json:"recipient_id"`
	// 状态：0-待处理，1-已同意，2-已拒绝，3-已忽略
	Status int8 `json:"status"`
	// 验证消息
	Message string `json:"message"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
}

// 群组
type Group struct {
	// 自增主键
	ID uint64 `json:"id"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
	// 群组名称
	Name string `json:"name"`
	// 群组头像
	AvatarUrl string `json:"avatar_url"`
	// 群组简介
	Introduction string `json:"introduction"`
	// 群组人数
	UserNum int32 `json:"user_num"`
	// 附加属性
	Extra string `json:"extra"`
}

// 群组成员
type GroupUser struct {
	// 组id
	GroupID uint64 `json:"group_id"`
	// 用户id
	UserID uint64 `json:"user_id"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
	// 成员类型，1：管理员；2：普通成员
	MemberType int8 `json:"member_type"`
	// 备注
	Remarks string `json:"remarks"`
	// 附加属性
	Extra string `json:"extra"`
	// 状态
	Status int8 `json:"status"`
}

// 消息
type Message struct {
	// 自增主键
	ID uint64 `json:"id"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
	// 请求id
	RequestID int64 `json:"request_id"`
	// 消息类型
	Code int32 `json:"code"`
	// 消息内容
	Content []byte `json:"content"`
	// 消息状态，0：未处理1：消息撤回
	Status int8 `json:"status"`
}

// 消息索引表（热数据）
type MessageIndex struct {
	// 消息ID
	MessageID string `json:"message_id"`
	// 会话ID
	ConversationID string `json:"conversation_id"`
	// 发送者ID
	SenderID uint64 `json:"sender_id"`
	// 接收者ID
	RecipientID uint64 `json:"recipient_id"`
	// 1:文本 2:图片 3:音频 4:视频 5:文件 6:位置
	MessageType int8 `json:"message_type"`
	// 会话内序列号
	Seq int64 `json:"seq"`
	// 回复的消息ID
	ReplyToMsgID sql.NullString `json:"reply_to_msg_id"`
	// 消息状态
	Status sql.NullInt16 `json:"status"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
}

// Outbox事件表
type OutboxEvent struct {
	// 自增主键
	ID uint64 `json:"id"`
	// 事件主题
	Topic string `json:"topic"`
	// 事件负载
	Payload json.RawMessage `json:"payload"`
	// 状态
	Status NullOutboxEventsStatus `json:"status"`
	// 重试次数
	RetryCount sql.NullInt32 `json:"retry_count"`
	// 下次投递时间
	NextDeliveryAt sql.NullTime `json:"next_delivery_at"`
	// 创建时间
	CreatedAt sql.NullTime `json:"created_at"`
	// 更新时间
	UpdatedAt sql.NullTime `json:"updated_at"`
}

// 序列号
type Seq struct {
	// 自增主键
	ID uint64 `json:"id"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
	// 对象类型,1:用户；2：群组
	ObjectType int8 `json:"object_type"`
	// 对象id
	ObjectID uint64 `json:"object_id"`
	// 序列号
	Seq uint64 `json:"seq"`
}

// 用户表
type User struct {
	// 自增主键
	ID uint64 `json:"id"`
	// 用户名，唯一
	Username string `json:"username"`
	// 哈希后的密码
	HashedPassword string `json:"hashed_password"`
	// 昵称
	Nickname string `json:"nickname"`
	// 性别，0:未知；1:男；2:女
	Sex int8 `json:"sex"`
	// 用户头像链接
	AvatarUrl string `json:"avatar_url"`
	// 邮箱，唯一
	Email sql.NullString `json:"email"`
	// 手机号，唯一
	PhoneNumber sql.NullString `json:"phone_number"`
	// 用户状态，1:正常；2:禁用；3:已注销(逻辑删除)
	Status int8 `json:"status"`
	// 附加属性，存储非结构化数据
	Extra json.RawMessage `json:"extra"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
}

// 用户会话状态
type UserConversation struct {
	// 用户ID
	UserID uint64 `json:"user_id"`
	// 会话ID
	ConversationID string `json:"conversation_id"`
	// 最后已读序列号
	LastReadSeq sql.NullInt64 `json:"last_read_seq"`
	// 未读数
	UnreadCount sql.NullInt32 `json:"unread_count"`
	// 是否免打扰
	IsMuted sql.NullBool `json:"is_muted"`
	// 是否置顶
	IsPinned sql.NullBool `json:"is_pinned"`
	// 更新时间
	UpdatedAt sql.NullTime `json:"updated_at"`
}

// 用户消息
type UserMessage struct {
	// 所属类型的id
	UserID uint64 `json:"user_id"`
	// 消息序列号
	Seq uint64 `json:"seq"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 更新时间
	UpdatedAt time.Time `json:"updated_at"`
	// 消息ID
	MessageID uint64 `json:"message_id"`
}
